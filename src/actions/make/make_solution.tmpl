# <%= premake.actions[_ACTION].shortname %> solution makefile autogenerated by Premake
# Usage: make [ CONFIG=config_name ]
# Where {config_name} is one of: <%= table.implode(this.configurations, '"', '"', ', ') %>.

ifndef CONFIG
  CONFIG=<%= make.esc(this.configurations[1]) %>
endif
export CONFIG

PROJECTS := <%= table.concat(make.esc(table.extract(this.projects, "name")), " ") %>

.PHONY: all clean $(PROJECTS)

all: $(PROJECTS)

<% for _,prj in ipairs(this.projects) do %>
 <% for cfg in premake.eachconfig(prj) do %>
ifeq ($(CONFIG),<%= make.esc(cfg.name)%>)
  DEPENDENCIES := <%= table.concat(make.esc(table.extract(premake.getdependencies(cfg), "name")), " ") %>
endif
 <% end %>

<%= make.esc(prj.name) %>: ${DEPENDENCIES}
	@echo ==== Building <%= prj.name %> ====
	@${MAKE} --no-print-directory -C <%=make.esc(path.getrelative(this.location, prj.location))%> -f <%=make.esc(make.getmakefilename(prj, true))%>
	
<% end %>

clean:
<% for _,prj in ipairs(this.projects) do %>
	@${MAKE} --no-print-directory -C <%=make.esc(path.getrelative(this.location, prj.location))%> -f <%=make.esc(make.getmakefilename(prj, true))%> clean
<% end %>
