<% local cc = premake[_OPTIONS.cc] %>
# <%= premake.actions[_ACTION].shortname %> project makefile autogenerated by Premake

ifndef CONFIG
  CONFIG=<%= _MAKE.esc(this.configurations[1]) %>
endif

<% for cfg in premake.eachconfig(this) do %>
ifeq ($(CONFIG),<%= _MAKE.esc(cfg.name)%>)
  TARGETDIR  = <%= _MAKE.esc(cfg.buildtarget.directory) %>
  TARGET     = $(TARGETDIR)/<%= _MAKE.esc(cfg.buildtarget.name) %>
  OBJDIR     = <%= _MAKE.esc(cfg.objectsdir) %>
  DEFINES   += <%= table.concat(cc.getdefines(cfg.defines), " ") %>
  INCLUDES  += <%= table.concat(cc.getincludedirs(cfg.includedirs), " ") %>
  CPPFLAGS  += <%= cc.getcppflags(cfg) %> $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) <%= table.concat(table.join(cc.getcflags(cfg), cfg.buildoptions), " ") %>
  CXXFLAGS  += $(CFLAGS) <%= table.concat(cc.getcxxflags(cfg), " ") %>
  LDFLAGS   += <%= table.concat(table.join(cc.getldflags(cfg), cc.getlinkflags(cfg), cfg.linkoptions), " ") %>
  RESFLAGS  += $(DEFINES) $(INCLUDES) <%= table.concat(table.join(cc.getdefines(cfg.resdefines), cc.getincludedirs(cfg.resincludedirs), cfg.resoptions), " ") %>
  LDDEPS    += <%= table.concat(_MAKE.esc(premake.getlinks(cfg, "siblings", "fullpath"))) %>
  <% if cfg.kind == "StaticLib" then %>
  LINKCMD    = ar -rcs $(TARGET) $(OBJECTS)
  <% else %>
  LINKCMD    = $(<%= iif(cfg.language == "C", "CC", "CXX") %>) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH)
  <% end %>
  define PREBUILDCMDS
    <% if #cfg.prebuildcommands > 0 then %>
	@echo Running pre-build commands
	<%= table.implode(cfg.prebuildcommands, "", "", "\n\t") %>
    <% end %>
  endef
  define PRELINKCMDS
    <% if #cfg.prelinkcommands > 0 then %>
	@echo Running pre-link commands
	<%= table.implode(cfg.prelinkcommands, "", "", "\n\t") %>
    <% end %>
  endef
  define POSTBUILDCMDS
    <% if #cfg.postbuildcommands > 0 then %>
	@echo Running post-build commands
	<%= table.implode(cfg.postbuildcommands, "", "", "\n\t") %>
    <% end %>
  endef
endif

<% end %>

OBJECTS := \
<% for _, file in ipairs(this.files) do %>
 <% if path.iscppfile(file) then %>
	$(OBJDIR)/<%= _MAKE.esc(path.getbasename(file)) %>.o \
 <% end %>
<% end %>

RESOURCES := \
<% for _, file in ipairs(this.files) do %>
 <% if path.isresourcefile(file) then %>
	$(OBJDIR)/<%= _MAKE.esc(path.getbasename(file)) %>.res \
 <% end %>
<% end %>

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

ifeq (posix,$(SHELLTYPE))
   MKDIR   := mkdir -p
   PATHSEP := /
else
   MKDIR   := mkdir
   PATHSEP := \\
endif

SYS_TARGET    := $(subst /,$(PATHSEP),$(TARGET))
SYS_TARGETDIR := $(subst /,$(PATHSEP),$(TARGETDIR))
SYS_OBJDIR    := $(subst /,$(PATHSEP),$(OBJDIR))

.PHONY: clean prebuild prelink

<% if os.is("MacOSX") and this.kind == "WindowedApp" then %>
all: $(TARGET) $(dir $(TARGETDIR))PkgInfo $(dir $(TARGETDIR))Info.plist

$(dir $(TARGETDIR))PkgInfo:

$(dir $(TARGETDIR))Info.plist:
<% end %>

$(TARGET): $(TARGETDIR) $(OBJDIR) prebuild $(OBJECTS) $(LDDEPS) $(RESOURCES) prelink
	@echo Linking <%= this.name %>
	@$(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $@
	@$(MKDIR) $(SYS_TARGETDIR)
	
$(OBJDIR):
	@echo Creating $@
	@$(MKDIR) $(SYS_OBJDIR)

clean:
	@echo Cleaning <%= this.name %>
ifeq (posix,$(SHELLTYPE))
	@rm -f  $(TARGET)
	@rm -rf $(OBJDIR)
else
	@if exist $(SYS_TARGET) del $(SYS_TARGET)
	@if exist $(SYS_OBJDIR) rmdir /s /q $(SYS_OBJDIR)
endif

prebuild:
	$(PREBUILDCMDS)
	
prelink:
	$(PRELINKCMDS)
	
<% for _, file in ipairs(this.files) do %>
<% if path.iscppfile(file) then %>
$(OBJDIR)/<%= _MAKE.esc(path.getbasename(file)) %>.o: <%= _MAKE.esc(file) %>
	@echo $(notdir $<)
	<% if (path.iscfile(file)) then %>
	@$(CC) $(CFLAGS) -o $@ -c $<
	<% else %>
	@$(CXX) $(CXXFLAGS) -o $@ -c $<
	<% end %>
	
<% elseif (path.getextension(file) == ".rc") then %>
$(OBJDIR)/<%= _MAKE.esc(path.getbasename(file)) %>.res: <%= _MAKE.esc(file) %>
	@echo $(notdir $<)
	@windres $< -O coff -o $@ $(RESFLAGS)

<% end %>
<% end %>

-include $(OBJECTS:%.o=%.d)
