<?xml version="1.0" encoding="utf-8"?>
<CodeLite_Project Name="<%= premake.esc(this.name) %>">
  <% premake.walksources(this, this.files, _CODELITE.files) %>
  <Settings Type="<%= _CODELITE.kind(this.kind) %>">
  <% for cfg in premake.eachconfig(this) do %>
    <Configuration Name="<%= premake.esc(cfg.name) %>" CompilerType="gnu <%= iif(cfg.language == "C", "gcc", "g++") %>" DebuggerType="GNU gdb debugger" Type="<%= _CODELITE.kind(cfg.kind) %>">
      <General OutputFile="<%= premake.esc(cfg.buildtarget.fullpath) %>" IntermediateDirectory="<%= premake.esc(cfg.objectsdir) %>" Command="./<%= cfg.buildtarget.name %>" CommandArguments="" WorkingDirectory="<%= cfg.buildtarget.directory %>" PauseExecWhenProcTerminates="<%= iif(cfg.kind == "WindowedApp", "no", "yes") %>"/>
      <Compiler Required="yes" Options="<%= table.concat(table.join(premake.gcc.getcflags(cfg), premake.gcc.getcxxflags(cfg), cfg.buildoptions), ";") %>">
        <% for _,v in ipairs(cfg.includedirs) do %>
        <IncludePath Value="<%= premake.esc(v) %>"/>
        <% end %>
        <% for _,v in ipairs(cfg.defines) do %>
        <Preprocessor Value="<%= premake.esc(v) %>"/>
        <% end %>
      </Compiler>
      <Linker Required="yes" Options="<%= table.concat(premake.esc(table.join(premake.gcc.getldflags(cfg), cfg.linkoptions)), ";") %>">
        <% for _,v in ipairs(premake.getlinks(cfg, "all", "directory")) do %>
        <LibraryPath Value="<%= premake.esc(v) %>" />
        <% end %>
        <% for _,v in ipairs(premake.getlinks(cfg, "all", "basename")) do %>
        <Library Value="<%= premake.esc(v) %>" />
        <% end %>
      </Linker>
      <% if premake.findfile(cfg, ".rc") then %>
      <ResourceCompiler Required="yes" Options="<%= table.implode(table.join(cfg.defines,cfg.resdefines), "-D", ";", "") %><%= table.concat(cfg.resoptions, ";") %>">
        <% for _,v in ipairs(table.join(cfg.includedirs, cfg.resincludedirs)) do %>
        <IncludePath Value="<%= premake.esc(v) %>"/>
        <% end %>
      </ResourceCompiler>
      <% else %>
      <ResourceCompiler Required="no" Options=""/>
      <% end %>
      <% if #cfg.prebuildcommands > 0 then %>
      <PreBuild>
        <% for _,v in ipairs(cfg.prebuildcommands) do %>
        <Command Enabled="yes"><%= premake.esc(v) %></Command>
        <% end %>
      </PreBuild>
      <% end %>
      <% if #cfg.postbuildcommands > 0 then %>
      <PostBuild>
        <% for _,v in ipairs(cfg.postbuildcommands) do %>
        <Command Enabled="yes"><%= premake.esc(v) %></Command>
        <% end %>
      </PostBuild>
      <% end %>
      <CustomBuild Enabled="no">
        <CleanCommand></CleanCommand>
        <BuildCommand></BuildCommand>
        <SingleFileCommand></SingleFileCommand>
        <MakefileGenerationCommand></MakefileGenerationCommand>
        <ThirdPartyToolName>None</ThirdPartyToolName>
        <WorkingDirectory></WorkingDirectory>
      </CustomBuild>
      <AdditionalRules>
        <CustomPostBuild></CustomPostBuild>
        <CustomPreBuild></CustomPreBuild>
      </AdditionalRules>
    </Configuration>
  <%end %>
  </Settings>
  <% for _,cfgname in ipairs(this.configurations) do %>
  <Dependencies name="<%= cfgname %>">
    <% for _,dep in ipairs(premake.getdependencies(this)) do %>
    <Project Name="<%= dep.name %>"/>
    <% end %>
  </Dependencies>
  <% end %>
</CodeLite_Project>
